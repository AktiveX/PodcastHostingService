name: Infrastructure Deployment

on:
  push:
    branches: [dev, staging, main]
    paths: ['infrastructure/**']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      resource-group: ${{ steps.env.outputs.resource-group }}
    steps:
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            case "${{ github.ref }}" in
              refs/heads/main)
                echo "environment=prod" >> $GITHUB_OUTPUT
                ;;
              refs/heads/staging)
                echo "environment=staging" >> $GITHUB_OUTPUT
                ;;
              refs/heads/dev)
                echo "environment=dev" >> $GITHUB_OUTPUT
                ;;
              *)
                echo "environment=dev" >> $GITHUB_OUTPUT
                ;;
            esac
          fi
          
          # Set resource group based on environment
          if [ "${{ steps.env.outputs.environment }}" == "prod" ]; then
            echo "resource-group=rg-podcast-prod" >> $GITHUB_OUTPUT
          elif [ "${{ steps.env.outputs.environment }}" == "staging" ]; then
            echo "resource-group=rg-podcast-staging" >> $GITHUB_OUTPUT
          else
            echo "resource-group=rg-podcast-dev" >> $GITHUB_OUTPUT
          fi

  deploy-infrastructure:
    needs: determine-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ needs.determine-environment.outputs.resource-group }} \
            --location "East US" \
            --tags Environment=${{ needs.determine-environment.outputs.environment }} Project=PodcastHostingService

      - name: Deploy Bicep Template
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          resourceGroupName: ${{ needs.determine-environment.outputs.resource-group }}
          template: infrastructure/main.bicep
          parameters: infrastructure/parameters/${{ needs.determine-environment.outputs.environment }}.json
          deploymentMode: Incremental
          deploymentName: infrastructure-${{ github.run_number }}

      - name: Get deployment outputs
        id: deployment
        run: |
          DEPLOYMENT_OUTPUTS=$(az deployment group show \
            --resource-group ${{ needs.determine-environment.outputs.resource-group }} \
            --name infrastructure-${{ github.run_number }} \
            --query properties.outputs \
            --output json)
          
          echo "Function App Name: $(echo $DEPLOYMENT_OUTPUTS | jq -r '.functionAppName.value')"
          echo "Static Web App Name: $(echo $DEPLOYMENT_OUTPUTS | jq -r '.staticWebAppName.value')"
          echo "Storage Account Name: $(echo $DEPLOYMENT_OUTPUTS | jq -r '.storageAccountName.value')"
          echo "Function App URL: $(echo $DEPLOYMENT_OUTPUTS | jq -r '.functionAppUrl.value')"
          echo "Static Web App URL: $(echo $DEPLOYMENT_OUTPUTS | jq -r '.staticWebAppUrl.value')"
